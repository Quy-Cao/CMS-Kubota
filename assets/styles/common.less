/* Font size, font weight, font-family*/
@font-weight: 400, 500, 600, 900, bold;
each(@font-weight, {
    .font-weight-@{value} {
        font-weight: @value !important;
    }
})

@font-size: 10px, 12px, 14px, 16px, 18px, 20px, 22px, 24px, 28px, 32px, 36px;
each(@font-size, {
    .font-@{value} {
        font-size: @value !important;
    }
})

/* Display flex, box, utility */
.d-flex {
  display: flex !important;
}

.d-block {
  display: block !important;
}

.d-none {
    display: none !important;
}

@direction: row, row-reverse, column, column-reverse;
each(@direction, {
    .flex-@{value} {
        flex-direction: @value !important;
    }
})

@justify: flex-start, flex-end, center, space-between, space-around;
each(@justify, {
    .justify-@{value} {
        justify-content: @value !important;
    }
})

@align: stretch, center, flex-start, flex-end, baseline, initial, inherit;
each(@align, {
    .align-item-@{value} {
        align-items: @value !important;
    }
})

/* Spacing */
@spacer: 20px;
@spacers: {
    0: 0;
    1: (@spacer * .25);
    2: (@spacer * .5);
    3: @spacer;
    4: (@spacer * 1.5);
    5: (@spacer * 3);
}

each(@spacers, {
    .m-@{key} {
        margin: @value !important;
    }
    .p-@{key} {
        padding: @value !important;
    }
    .mx-@{key} {
        margin-right: @value !important;
        margin-left: @value !important;
    }
    .my-@{key} {
        margin-top: @value !important;
        margin-bottom: @value !important;
    }
    .mr-@{key} {
        margin-right: @value !important;
    }
    .ml-@{key} {
        margin-left: @value !important;
    }
    .mt-@{key} {
        margin-top: @value !important;
    }
    .mb-@{key} {
        margin-bottom: @value !important;
    }
    .px-@{key} {
        padding-right: @value !important;
        padding-left: @value !important;
    }
    .py-@{key} {
        padding-top: @value !important;
        padding-bottom: @value !important;
    }
    .pr-@{key} {
        padding-right: @value !important;
    }
    .pl-@{key} {
        padding-left: @value !important;
    }
    .pt-@{key} {
        padding-top: @value !important;
    }
    .pb-@{key} {
        padding-bottom: @value !important;
    }
})

@positions: static, relative, absolute;
    each(@positions, {
        .position-@{value} {
            position: @value !important;
        }
})

@texts: {
  main: #333333;
  primary: #00a8a9;
  gray: #666666;
  gray2: #bababa;
  gray3: #747474;
  danger: #fa5555;
  danger-bold: #a92900;
  white: #fff;
  orange: #dc4405;
  black: #000;
}
each(@texts, {
    .txt-@{key} {
        color: @value !important;
    }
})

/* Background utility */
@setBg: {
  purple: #a954cb;
  green: #24bda4;
  gray: #f8f8f8;
  white: #fff;
  blue: #e7f2f4;
  red: #ff1e1e;
  white-smoke: #f5f5f5;
  dark-yellow: #ff9c26;
  pink: #eb6282;
  light-red: #fa5555;
  light-yellow: #fffcf7;
  primary: #40bfe4;
  title: #001536;
  black: #000000
};

each(@setBg, {
.bg-@{key} {
  background: @value !important;
}
})

/* Position */
@position: left, right, center;
each(@position, {
  .txt-@{value} {
    text-align: @value !important;
  }
})

/* Img utility */
.img-fluid {
  max-width: 100%;
  height: auto;
}

.w-100 {
  width: 100% !important;
}

.w-50 {
  width: 50% !important;
}

.h-100 {
  height: 100% !important;
}

.line-height-normal {
  line-height: normal !important;
}

@positions: static, relative, absolute, fixed;
  each(@positions, {
    .position-@{value} {
      position: @value !important;
    }
})

@float: left, right;
each(@position, {
  .float-@{value} {
    float: @value !important;
  }
})

.ic-row-right {
  background: url('../images/row-right-blue.svg') no-repeat;
  height: 32px;
  width: 32px;
  display: block;
  background-position: center;
}

.ic-breadcrumb {
  height: 20px;
  width: 20px;
  display: inline-block;
  text-align: center;
}

.ic-color {
  height: 22px;
  width: 22px;
  border: 1px;
  border-radius: 50%;
  border-style: dashed;
  border-color: black;
}

/* White space */
.nl2br {
  white-space: pre-line;
}

.hr {
  height: 2px;
  background-color: #dedede
}

.cursor-pointer {
  cursor: pointer !important;
}

.line-height-normal {
  line-height: normal !important;
}
